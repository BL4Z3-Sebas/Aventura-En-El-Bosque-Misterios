package Vista;

import arbol.Arbol;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import niveles.Apuntador;
import niveles.GeneradorNiveles;
import niveles.Nivel;

/**
 *
 * @author cotes
 */
public class DialogoFrame extends javax.swing.JFrame {

    /**
     * Creates new form Escenario
     */
    Arbol arbol = Arbol.getInstancia();
    Apuntador ap = Apuntador.getInstancia();
    public static String Nivel;
    public static Nivel nivel_static;
    public static boolean continuarAcertijo = false;

    public DialogoFrame() {
        initComponents();

        GeneradorNiveles.generarArbolNiveles();
        ap.setNodo(arbol.getRaiz());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea1 = new javax.swing.JTextArea();
        Button1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TextArea1.setEditable(false);
        TextArea1.setColumns(20);
        TextArea1.setFont(new java.awt.Font("Blackadder ITC", 0, 30)); // NOI18N
        TextArea1.setRows(5);
        jScrollPane1.setViewportView(TextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 282, 700, 162));

        Button1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Button1.setText("Acertijo");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });
        jPanel1.add(Button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 14, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        try {
            Nivel = "nivel_2";
            mostrarHistoria(Nivel);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DialogoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPanel1MouseClicked

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        continuarAcertijo = !continuarAcertijo;
        if (continuarAcertijo) {
            AcertijoFrame x = new AcertijoFrame();
            x.setVisible(true);
            x.mostrarAcertijo(ap.getUbicacion());
        }
    }//GEN-LAST:event_Button1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DialogoFrame().setVisible(true);
            }
        });
    }

    public void mostrarHistoria(String level) throws UnsupportedEncodingException {
        try {
            TextArea1.setText("");
            TextArea1.append("                                               " + ap.getUbicacion().getTitulo());
            TextArea1.append("\n");

            // Ejecutar el audio en un hilo separado
            escribirDialogo(ap.getUbicacion().getHistoria());

        } catch (Exception e) {
            System.out.println(e.toString());
        }

    }

    public void escribirDialogo(String dialogo) {
        // Crear un hilo para manejar la ejecución en segundo plano
        Thread thread = new Thread(() -> {
            char[] caracteres = dialogo.toCharArray();  // Convertir el diálogo a un array de caracteres
            int longitud = 0;

            for (char c : caracteres) {
                final char caracterActual = c;  // Necesario para acceder al carácter dentro de invokeLater

                // Publicar el carácter en el JTextArea (esto debe hacerse en el Event Dispatch Thread)
                SwingUtilities.invokeLater(() -> TextArea1.append(String.valueOf(caracterActual)));

                longitud++;

                if (longitud >= 65 && caracterActual == ' ') {
                    SwingUtilities.invokeLater(() -> TextArea1.append("\n"));
                    longitud = 0;
                }

                try {
                    // Añadir pausas dependiendo del carácter
                    switch (caracterActual) {
                        case '.':
                            Thread.sleep(500);  // Pausa más larga después de un punto
                            SwingUtilities.invokeLater(() -> TextArea1.append("\n"));  // Saltar línea después de un punto
                            longitud = 0;
                            break;
                        case ',':
                            Thread.sleep(200);  // Pausa corta entre palabras (después de un espacio)
                            break;
                        default:
                            Thread.sleep(50);  // Pausa corta entre caracteres
                            break;
                    }
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                }
            }
        });

        thread.start();  // Iniciar el hilo
    }

//    public void escribirDialogo(String dialogo) {
//        // Usar un SwingWorker para manejar la ejecución en segundo plano
//        SwingWorker<Void, String> worker;
//        worker = new SwingWorker<>() {
//            @Override
//            protected Void doInBackground() {
//                String[] palabras = dialogo.split("\\s+");
//                int longitud = 0;
//
//                for (String palabra : palabras) {
//                    publish(palabra);
//                    longitud += palabra.length() + 1;
//
//                    if (longitud >= 65) {
//                        publish("\n");
//                        longitud = 0;
//                    }
//
//                    try {
//                        if (palabra.endsWith("Dr.")) {
//                            Thread.sleep(250);
//                        } else {
//                            if (palabra.endsWith(".")) {
//                                Thread.sleep(800);  // Pausa más larga después de un punto
//                                publish("\n");  // Saltar línea después de un punto
//                                longitud = 0;
//                            } else {
//                                Thread.sleep(250);  // Pausa corta entre palabras
//                            }
//                        }
//
//                    } catch (InterruptedException e) {
//                        Thread.currentThread().interrupt();
//                    }
//                }
//
//                return null;
//            }
//
//            @Override
//            protected void process(java.util.List<String> chunks) {
//                for (String palabra : chunks) {
//                    TextArea1.append(palabra + " ");  // Mostrar la palabra en el JTextArea
//                }
//            }
//        };
//
//        worker.execute();  // Iniciar el SwingWorker
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button1;
    private javax.swing.JTextArea TextArea1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
